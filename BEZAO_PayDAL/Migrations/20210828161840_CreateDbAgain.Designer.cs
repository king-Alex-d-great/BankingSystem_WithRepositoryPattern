// <auto-generated />
using System;
using BEZAO_PayDAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BEZAO_PayDAL.Migrations
{
    [DbContext(typeof(BezaoPayContext))]
    [Migration("20210828161840_CreateDbAgain")]
    partial class CreateDbAgain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BEZAO_PayDAL.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountNumber")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(38,2)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = 760015555,
                            Balance = 23456782340m
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = 222833403,
                            Balance = 56000000000m
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = 456723646,
                            Balance = 78345678230m
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = 1642347213,
                            Balance = 63723456780m
                        },
                        new
                        {
                            Id = 5,
                            AccountNumber = 753485382,
                            Balance = 88978234000m
                        });
                });

            modelBuilder.Entity("BEZAO_PayDAL.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(38,2)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionMode")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 50000000m,
                            TimeStamp = new DateTime(2021, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionMode = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 60000000m,
                            TimeStamp = new DateTime(2022, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionMode = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 70000000m,
                            TimeStamp = new DateTime(2023, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionMode = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 80000000m,
                            TimeStamp = new DateTime(2024, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionMode = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Amount = 90000000m,
                            TimeStamp = new DateTime(2025, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TransactionMode = 1,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BEZAO_PayDAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 1,
                            Birthday = new DateTime(1990, 10, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2021, 8, 28, 17, 18, 40, 63, DateTimeKind.Local).AddTicks(9810),
                            Email = "sorry.sir@abeg.com",
                            IsActive = true,
                            Name = "Francis Sorry",
                            Password = "auXCg6p2Zf7mO7vG6VwDgWFb3o0u0xnwF9QRFWr9",
                            Salt = "29-2f-30-e1-cd-7a-88-83-9d-9c-cf-96-ba-59-97-c2",
                            Username = "francissorry"
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 2,
                            Birthday = new DateTime(1420, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2021, 8, 28, 17, 18, 40, 80, DateTimeKind.Local).AddTicks(8672),
                            Email = "badguy@BBA.com",
                            IsActive = true,
                            Name = "GrandMaster KC",
                            Password = "ivh8m/sY5gwyGjU6+Qv4qxgqLi4uepNyVVZki2B4",
                            Salt = "28-fe-52-0b-7e-56-90-a0-80-87-fd-d1-08-bd-13-c6",
                            Username = "grandmasterkc"
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 3,
                            Birthday = new DateTime(1420, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2021, 8, 28, 17, 18, 40, 91, DateTimeKind.Local).AddTicks(6011),
                            Email = "dara.sage@ned.com",
                            IsActive = true,
                            Name = "Dara John",
                            Password = "MteaRuL3p20QI4j0qZZTypIePnCfmm177WzEAk9q",
                            Salt = "e0-74-3f-61-d2-e3-20-ae-dc-34-57-95-9d-7d-2e-06",
                            Username = "darajohn"
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 4,
                            Birthday = new DateTime(1420, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2021, 8, 28, 17, 18, 40, 102, DateTimeKind.Local).AddTicks(1655),
                            Email = "sadboy@BBA.com",
                            IsActive = true,
                            Name = "Kachi !Thename",
                            Password = "EilEGGvFKLo32Qe3+Txq23DGjWMnrzCASyZmg3gN",
                            Salt = "6c-4e-ae-0c-af-5d-b1-e5-c9-11-38-26-3a-d0-58-a4",
                            Username = "kachi!thename"
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 5,
                            Birthday = new DateTime(1420, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Created = new DateTime(2021, 8, 28, 17, 18, 40, 112, DateTimeKind.Local).AddTicks(7371),
                            Email = "omo@BBA.com",
                            IsActive = true,
                            Name = "Sammy ROCBAFDEZ",
                            Password = "9uwTNdDtbHGkHs3gVN5mS8SWfk6M0TVFy/3cRmnn",
                            Salt = "56-7c-8b-e3-54-a8-69-4a-8b-76-54-a3-60-cd-17-8b",
                            Username = "sammyrocbafdez"
                        });
                });

            modelBuilder.Entity("BEZAO_PayDAL.Entities.Transaction", b =>
                {
                    b.HasOne("BEZAO_PayDAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BEZAO_PayDAL.Entities.User", b =>
                {
                    b.HasOne("BEZAO_PayDAL.Entities.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
